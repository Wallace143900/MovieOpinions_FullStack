"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reviewRouter = void 0;
const express_1 = require("express");
const review_controller_1 = require("../controllers/review.controller");
const tsyringe_1 = require("tsyringe");
const review_services_1 = require("../services/review.services");
const validateBody_middleware_1 = require("../middleware/validateBody.middleware");
const review_schemas_1 = require("../schemas/review.schemas");
const addUserId_middleware_1 = require("../middleware/addUserId.middleware");
const verifyToken_middleware_1 = require("../middleware/verifyToken.middleware");
const isReviewValid_middleware_1 = require("../middleware/isReviewValid.middleware");
const verifiyReviewOwnership_middleware_1 = require("../middleware/verifiyReviewOwnership.middleware");
exports.reviewRouter = (0, express_1.Router)();
tsyringe_1.container.registerSingleton('ReviewServices', review_services_1.ReviewServices);
const reviewController = tsyringe_1.container.resolve(review_controller_1.ReviewController);
exports.reviewRouter.use(verifyToken_middleware_1.VerifyToken.execute);
exports.reviewRouter.post('/:movieId', addUserId_middleware_1.AddUserIdToRequest, validateBody_middleware_1.ValidateBody.execute(review_schemas_1.reviewCreateSchema), (req, res) => { reviewController.create(req, res); });
exports.reviewRouter.get("", (req, res) => { reviewController.findMany(req, res); });
exports.reviewRouter.get("/:id", isReviewValid_middleware_1.IsReviewIdValid.execute, verifiyReviewOwnership_middleware_1.verifyReviewOwnership, (req, res) => { reviewController.findOne(req, res); });
exports.reviewRouter.patch("/:id", validateBody_middleware_1.ValidateBody.execute(review_schemas_1.reviewUpdateSchema), isReviewValid_middleware_1.IsReviewIdValid.execute, verifiyReviewOwnership_middleware_1.verifyReviewOwnership, (req, res) => { reviewController.update(req, res); });
exports.reviewRouter.delete("/:id", isReviewValid_middleware_1.IsReviewIdValid.execute, verifiyReviewOwnership_middleware_1.verifyReviewOwnership, (req, res) => { reviewController.delete(req, res); });
